name: Publish Community App Build

on:
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version
        id: get_version
        run: echo "version=${{ github.run_id }}" >> $GITHUB_OUTPUT

  build-apk:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Build APK
        working-directory: ./app
        run: |
          flutter pub get
          flutter build apk --release --split-per-abi
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: app/build/app/outputs/flutter-apk/app-*-release.apk

  build-windows:
    needs: get-version
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Build Windows
        working-directory: ./app
        run: |
          flutter pub get
          flutter build windows --release
      - name: Archive Windows release
        working-directory: ./app
        run: Compress-Archive -Path build/windows/runner/Release -DestinationPath ../windows_x64_${{ needs.get-version.outputs.version }}.zip
      - name: Upload Windows
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: "windows_x64_${{ needs.get-version.outputs.version }}.zip"

  publish-app-release:
    needs: [get-version, build-apk, build-windows]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: List files
        run: ls -R
      - name: Publish to GH Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "community-${{ needs.get-version.outputs.version }}"
          name: "Community Build ${{ needs.get-version.outputs.version }}"
          body: "Community build triggered by workflow_dispatch. This is a pre-release for testing."
          files: |
            apks/*.apk
            windows/*.zip
          prerelease: true
