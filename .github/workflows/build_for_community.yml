name: Publish Community App Build\n\non:\n  workflow_dispatch:\n\njobs:\n  get-version:\n    runs-on: ubuntu-latest\n    outputs:\n      version: ${{ steps.get_version.outputs.version }}\n    steps:\n      - name: Get version\n        id: get_version\n        run: echo "version=${{ github.run_id }}" >> $GITHUB_OUTPUT\n\n  build-apk:\n    needs: get-version\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: true\n          fetch-depth: 0\n      - uses: subosito/flutter-action@v2\n        with:\n          channel: "stable"\n      - name: Build APK\n        working-directory: simple_live_app\n        run: |\n          flutter pub get\n          flutter build apk --release --split-per-abi\n      - name: Upload APK\n        uses: actions/upload-artifact@v4\n        with:\n          name: apks\n          path: simple_live_app/build/app/outputs/flutter-apk/app-*-release.apk\n\n  build-windows:\n    needs: get-version\n    runs-on: windows-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          submodules: true\n          fetch-depth: 0\n      - uses: subosito/flutter-action@v2\n        with:\n          channel: "stable"\n      - name: Build Windows\n        working-directory: simple_live_app\n        run: |\n          flutter pub get\n          flutter build windows --release\n      - name: Archive Windows release\n        working-directory: simple_live_app\n        run: Compress-Archive -Path build/windows/runner/Release -DestinationPath ../windows_x64_${{ needs.get-version.outputs.version }}.zip\n      - name: Upload Windows\n        uses: actions/upload-artifact@v4\n        with:\n          name: windows\n          path: "windows_x64_${{ needs.get-version.outputs.version }}.zip"\n\n  publish-app-release:\n    needs: [get-version, build-apk, build-windows]\n    permissions:\n      contents: write\n    runs-on: ubuntu-latest\n    steps:\n      - name: Download all artifacts\n        uses: actions/download-artifact@v4\n      - name: List files\n        run: ls -R\n      - name: Publish to GH Release\n        uses: softprops/action-gh-release@v1\n        with:\n          tag_name: "community-${{ needs.get-version.outputs.version }}"\n          name: "Community Build ${{ needs.get-version.outputs.version }}"\n          body: "Community build triggered by workflow_dispatch. This is a pre-release for testing."\n          files: |\n            apks/*.apk\n            windows/*.zip\n          prerelease: true